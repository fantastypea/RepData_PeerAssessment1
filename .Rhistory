data <- read.csv("Idaho.csv")
names(data)
temp <- data$WGTP
strsplit(names(data))
library(dplyr)
strsplit(names(data))
?strsplit
strsplit(names(data),"wgtp")
temp <- strsplit(names(data),"wgtp")
temp[123]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile = "./grossgdp.csv",method="curl")
data <- read.csv("grossgdp.csv")
View(data)
View(data)
data <- read.csv("grossgdp.csv",header = "FALSE")
data <- read.csv("grossgdp.csv",header = FALSE)
newdata <- data[6:236,]
View(newdata)
View(newdata)
newdata$V5
mean(newdata$V5)
mean(newdata$V5,rm.na=TRUE)
classic(newdata$V5)
class(newdata$V5)
gdp <- as.numeric(newdata$V5)
gdp <- as.numeric(as.character(newdata$V5))
gdp <- gsub(",","",newdata$V5)
gdpg <- as.numeric(gdp)
mean(gdpg)
gdpg
mean(gdpg,rm.na=true)
mean(gdpg,na.rm =true)
mean(gdpg,na.rm =TRUE)
mean(gdpg[1:190],na.rm =TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile = "./gross.csv",method="curl")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url,destfile = "./education.csv",method="curl")
gross <- read.csv("gross.csv",header=FALSE)
education <- read.csv("education.csv",header=FALSE)
View(gross)
View(gross)
gross <- read.csv("gross.csv",skip=5,header=FALSE)
View(education)
View(education)
education <- read.csv("education.csv")
names(education)
View(gross)
View(gross)
gross <- gross[1:190,]
View(gross)
View(gross)
gross <- select(gross,V1,V2,V4,V5)
View(gross)
View(gross)
names(gross) <- c("CountryCode","number","Long.Name","GDP")
View(gross)
View(gross)
View(education)
View(education)
data <- merge(gross,education,by = "CountryCode")
View(gross)
data$CountryCode
gross$CountryCode
setdiff(gross$CountryCode,data$CountryCode)
setdiff(gross$CountryCode,education$CountryCode)
View(education)
View(education)
names(data)
grep("^Fiscal year end: June",data$Special.Notes)
T <- grep("^Fiscal year end: June",data$Special.Notes)
length(T)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
names(amzn)
rownames(amzn)
Sys.Date(amzn)
head(amzn)
row.names(amzn)
as.date(rownames(amzn))
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
temp
ppoise(10,lambda=15)
ppois(10,lambda=15)
pbinom(3, size = 5, prob = 0.5, lower.tail = FALSE)
?qnorm
qnorm(0.95,1100,75)
qnorm(0.95,1100,23.7)
qnorm(0.95,1100,7.5)
install.packages("reshape2")
library(datasets)
data("ChickWeight")
library(reshape2)
View(ChickWeight)
View(ChickWeight)
d <- dcast(ChickWeight,Diet+Chick~Time, value.var = "Weight")
d <- dcast(ChickWeight,Diet+Chick~Time, value.var = "weight")
View(d)
View(d)
ChickWeight$Chick
library(UsingR)
install.packages("UsingR")
?t.test
qt(.975,15)
qt(0.25,15)
swirl()
library(swirl)
swirl()
swirl()
swirl()
install_course("statical inteference")
install_course("Statistical Inference")
install_course("Regression Models")
install_course("Exploratory Data Analysis")
swirl()
swilr()
swirl()
2
33/36
deck
52
4/52
3/51*2/50*1/49
0
12/52
2/51
install.packages("kernlab")
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
getwd()
setwd("/Users/yuesongshi/Documents/R-coursera/reproducible research")
getwd()
list.files()
data <- read.csv("activity.csv")
names(data)
View(data)
class(data$date)
unique(data$steps)
data <- read.csv("activity.csv",na.rm=TRUE)
data <- read.csv("activity.csv",na.strings = "NA")
summary(data)
unique(data$date)
levels(data$date)
stepday <- tapply(data$steps,data$date,sum)
stepday
table(stepday)
histogram(stepday)
hist(stepday)
barplot(stepday)
library(knitr)
setwd("/Users/yuesongshi/Documents/R-coursera/reproducible research")
setwd("~/Documents/R-coursera/Reproducible research")
unique(data$interval)
class(data$interval)
data$interval <- as.factor(data$interval)
interstep <- tapply(data$steps, data$interval, mean)
interstep
interstep <- tapply(data$steps, data$interval, mean,)
hist(stepday)
hist(stepday,breaks=20)
tapply(data$steps,data$date,mean)
interstep <- tapply(data$steps,data$date,mean,na.rm = TRUE)
interstep
interstep <- tapply(data$steps,data$interval,mean,na.rm = TRUE)
plot(interstep,data$interval)
plot(interstep,levels(interval))
plot(interstep,unique(data$interval))
interstep
plot(interstep)
?plot
plot(interstep,type="l")
plot(interstep,type="l",xlab="interval",ylab = "average number of steps")
max(interstep)
which.max(interstep)
d <- which.max(interstep)
interstep[d]
sum(is.na(data))
gsub("NA",interstep,data$steps)
as.character(interstep)
gsub("NA",as.character(interstep),data$steps)
class(data$steps)
data$steps <- as.character(data$steps)
gsub("NA",as.character(interstep),data$steps)
sub("NA",as.character(interstep),data$steps)
replace <- function(x){}
new <- split(data,data$interval)
summary(new)
new[1]
naindex <- which(is.na(data$steps))
nainterval <- data$interval[naindex]
interstep[nainterval]
substi <- interstep[nainterval]
unique(substi)
t <- unique(substi)
data$steps[naindex] <- substi
View(data)
data <- read.csv("activity.csv",na.strings = "NA")
data$interval <- as.factor(data$interval)
interstep <- tapply(data$steps,data$interval,mean,na.rm=TRUE)
newdata <- data.frame(steps=data$steps,date=data$date,interval=data$interval)
newdata$steps[naindex] <- substi
View(newdata)
View(newdata)
newstep <- tapply(newdata$steps,newdata$interval,sum)
hist(newstep)
newstep <- tapply(newdata$steps,newdata$date,sum)
hist(newstep)
hist(newstep,breaks = 20)
class(newdata$date)
substi <- stepday[nainterval]
meanforday <- tapply(data$steps,data$date,mean,na.rm=TRUE)
substi <- meanforday[nainterval]
newdata <- data.frame(steps=data$steps,date=data$date,interval=data$interval)
newdata$steps[naindex] <- substi
newstep <- tapply(newdata$steps,newdata$date,sum)
hist(newstep,breaks = 20)
meanforday
newdata <- data.frame(steps=data$steps,date=data$date,interval=data$interval)
View(newdata)
replace <- function(x){}
nadate <- data$date[naindex]
nadate
meanforday[2012-11-04 ]
meanforday[nadata]
meanforday[nadate]
names(interstep)
interstep["o"]
interstep["0"]
interstep[newdata$date[nadate]]
t <- interstep[newdata$date[nadate]]
substi <- interstep[newdata$date[nadate]]
newdata$steps[naindex] <- substi
View(newdata)
substi <- meanforday[newdata$date[nadate]]
newdata$steps[naindex] <- substi
View(newdata)
newstep <- tapply(newdata$steps,newdata$date,sum)
hist(newstep,breaks = 20)
avgday <- tapply(newdata$steps,newdata$date,mean,na.rm=TRUE)
substi <- avgday[newdata$date[nadate]]
summary(newdata)
sum(is.na(newdata$steps))
newdata$steps[naindex]
substi
unique(substi)
substi <- avgday[newdata$date[nadate]]
newdata$date[nadate]
class(newdata$date[nadate])
as.character(newdata$date[nadate])
t <- avgday[as.character(newdata$date[nadate])]
unique(t)
avgday["2012-10-02"]
xy <- as.character(newdata$date[nadate])
lapply(xy,avgday[xy])
avgday["2012-10-02" "2012-10-03"]
avgday["2012-10-02","2012-10-03"]
replace <- function(x){
for (x in xy){
substi <- c(substi,avgday[xy])
}
}
replace <- function(x){
+     for (x in xy){
+         substi <- c(substi,avgday[x])
+     }
+ }
replace <- function(x){
+     for (x in xy){
+         substi <- c(substi,avgday[x])
+     }
+ }
replace <- function(x){
+     for (x in xy){
+         substi <- c(substi,avgday[x])
+     }
+ }
for (x in xy){
+ +         substi <- c(substi,avgday[x])
for (x in xy){
substi <- c(substi,avgday[x])
}
substi
""
}
substi <- vector()
substi <- as.numeric(vector())
for (i in xy){substi <- c(substi,avgday[i])}
unique(substi)
xy[3]
xy[1000]
xy[2000]
str(xy)
uniqeu(xy)
unique(xy)
xy <- as.character(newdata$date[nadate])
unique(xy)
xy <- as.character(newdata$date[naindex])
unique(xy)
for (i in xy){substi <- c(substi,avgday[i])}
unique(substi)
unique(substi)
unique(xy)
xy[2000]
avgday[xy[2000]]
avgday[xy[1000]]
avgday[2012-11-14 ]
avgday[2012-11-14]
avgday["2012-11-14 "]
avgday["2012-11-14"]
avgday
xy[500]
xy[200]
xy[300]
xy[250]
xy[26]
xy[260]
xy[290]
xy[270]
xy[280]
xy[290]
interstep
xy <- data$interval[naindex]
xy <- as.character(data$interval[naindex])
substi <- as.numeric(vector())
for (i in xy){substi <- c(substi,interstep[i])}
newdata$steps[naindex] <- substi
newstep <- tapply(newdata$steps,newdata$date,sum)
hist(newstep,breaks = 20)
stepday
mean(stepday)
stepday <- tapply(data$steps,data$date,sum,na.rm=TRUE)
mean(stepday)
table(mean(stepday),median(stepday))
class(data$date)
data$date <- as.Date(data$date)
w <- weekdays(data$date)
unique(w)
levels(data$date)
levels(as.factor(w))
data$date <- weekdays(data$date)
View(data)
data$newcolumn <- data$date
View(data)
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend <- c("Saturday","Sunday")
gsub(weekday,"weekday",data$newcolumn)
gsub(weekday,c("weekday","weekday","weekday","weekday"),data$newcolumn)
for (i in weekday){gsub(weekday[i],"weekday,data$newcolumn")}
for (x in weekday){gsub(weekday[x],"weekday,data$newcolumn")}
for (x in weekday){gsub(weekday[x],"weekday",data$newcolumn")}
for (x in weekday){gsub(weekday[x],"weekday",data$newcolumn")}
weekday[1]
for (x in weekday){gsub(x,"weekday",data$newcolumn")}
for (x in weekday){gsub(x,"weekday",data$newcolumn)}
View(newdata)
View(data)
g <- grep(weekday,data$newcolumn)
g <- grep("Monday"|"Tuesday",data$newcolumn)
g <- grep("Monday"|"Tuesday",data$newcolumn)
week <- data$newcolumn
for (x in week){gsub(x,"weekday",week)}
week[week %in% "weekday"] <- "weekday"
week[week %in% weekday] <- "weekday"
week[week %in% weekend] <- weekend
unique(week)
week[week %in% weekend] <- "weekend"
unique(week)
data$newcolumn <- week
View(data)
week <- as.character(as.date(data$date))
week <- as.character(as.Date(data$date))
data <- read.csv("activity.csv",na.strings = "NA")
week <- as.character(as.date(data$date))
week <- as.character(as.Date(data$date))
week <- as.character(weekday(data$date))
week <- as.character(weekdays(data$date))
week <- as.character(weekdays(as.Date(data$date))
)
week[week %in% "weekday"] <- "weekday"
data$newcolumn <- week
par(mfrow=c(2,1))
class(data$newcolumn)
data$newcolumn <- as.factor(data$newcolumn)
with(data,{
plot(grep("weekday",data$newcolumn),data$steps,type="l")
})
weekday <- subset(data,data$newcolumn=="weekday")
View(weekday)
View(data)
week <- as.character(weekdays(as.Date(data$date)))
week[week %in% weekday] <- "weekday"
week[week %in% weekend] <- "weekend"
data$newcolumn <- week
View(data)
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend <- c("Saturday","Sunday")
week <- as.character(weekdays(as.Date(data$date)))
week[week %in% weekday] <- "weekday"
week[week %in% weekend] <- "weekend"
data$newcolumn <- week
View(data)
group1 <- subset(data,data$newcolumn=="weekday")
View(group1)
group2 <- subset(data,data$newcolumn=="weekend")
plot(group1$steps,group1$interval)
plot(group2$steps,group2$interval,type = "l")
library(lattice)
xyplot(group1$steps~group1$interval,type="l",data)
xyplot(group1$steps~group1$date,type="l",data)
groupinter <- tapply(group1$steps,group1$interval,mean,na.rm=TRUE)
plot(groupinter,type="l")
xyplot(groupinter,type="l")
plot(groupinter,group1$interval,type="l")
plot(groupinter,unique(group1$interval),type="l")
unique(group1$interval)
plot(unique(group1$interval),groupinter,type="l")
t <- unique(group1$interval)
as.numric(t)
as.numeric(t)
plot(as.numeric(unique(data$interval)),interstep,type="l",xlab="interval",ylab="average number of steps")
ggplot(data,aes(x=unique(data$interval),y=data$steps,group=newcolumn)+geom_line())
library(ggplot)
library(ggplot2)
ggplot(data,aes(x=unique(data$interval),y=data$steps,group=newcolumn)+geom_line())
ggplot(data,aes(x=data$interval,y=data$steps,group=newcolumn)+geom_line())
ggplot(data,aes_(x=data$interval,y=data$steps,group=newcolumn)+geom_line())
ggplot(data,aes_(x=data$interval,y=data$steps,group=data$newcolumn)+geom_line())
ggplot(data,aes(x=data$interval,y=data$steps,group=data$newcolumn)+geom_line())
class(data$newcolumn)
data$newcolumn <- as.factor(data$newcolumn)
ggplot(data,aes(x=data$interval,y=data$steps,group=data$newcolumn)+geom_line())
ggplot(data,aes(x=interval,y=steps,group=newcolumn)+geom_line())
ggplot(data,aes(x=interval,y=steps,group=newcolumn)+geom_line()))
ggplot(data,aes(x=interval,y=steps,group=newcolumn)+geom_line())
p <- ggplot(data,aes(x=interval,y=steps,group=newcolumn,color=newcolumn)+geom_line())
xyplot(steps~interval|newcolumn,data,type="l")
xyplot(steps~interval|newcolumn,data,type="l",layout=c(1,2))
xyplot(tapply(data$steps,data$interval,mean,na.rm=TRUE)~interval|newcolumn,data,type="l",layout=c(1,2))
groupinter <- tapply(data$steps,data$interval,mean,na.rm=TRUE
)
groupinter
groupinter <- tapply(data$steps,list(data$interval,data$newcolumn),mean,na.rm=TRUE)
groupinter
xyplot(groupinter~interval|newcolumn,data,type="l",layout=c(1,2))
names(groupinter)
data.frame(groupinter)
names(groupinter)
names(data.frame(groupinter))
groupinter <- data.frame(groupinter)
xyplot(groupinter~interval|newcolumn,data,type="l",layout=c(1,2))
xyplot(groupinter~interval,data,type="l",layout=c(1,2))
xyplot(tapply(data$steps,list(data$interval,data$newcolumn),mean,na.rm=TRUE)~interval|newcolumn,data,type="l",layout=c(1,2))
str(groupinter)
xyplot(tapply(data$steps,list(data$interval,data$newcolumn),mean,na.rm=TRUE)~interval|names(groupinter),data,type="l",layout=c(1,2))
groupinter <- rcbind(groupinter,unique(data$interval))
groupinter <- cbind(groupinter,unique(data$interval))
names(groupinter)
names(groupinter)[3] <- interval
names(groupinter)[3] <- "interval"
ggplot(groupinter,aes(x=groupinter$interval,y1=groupinter$weekday,y2=groupinter$weekend)+geom_line())
melt(groupinter)
library(dplyr)
melt(groupinter)
library(reshape2)
melt(groupinter)
melted <- melt(groupinter)
View(groupinter)
melted <- melt(groupinter,id.vars = c("weekday","weekend") )
View(melted)
melted <- melt(groupinter,id.vars = "interval" )
xyplot(value~interval|variable,melted,type="l",layout=c(1,2))
melted <- melt(groupinter,id.vars = "interval" ,variable.name = "time", value.name = "steps")
xyplot(steps~interval|time,type="l",layout=c(1,2))
groupinter <- tapply(data$steps,list(data$interval,data$newcolumn),mean,na.rm=TRUE)
groupinter <- data.frame(groupinter)
groupinter <- cbind(groupinter,unique(data$interval))
melted <- melt(groupinter,id.vars = "interval" ,variable.name = "time", value.name = "steps")
View(groupinter)
names(groupinter)[3] <- "interval"
melted <- melt(groupinter,id.vars = "interval" ,variable.name = "time", value.name = "steps")
xyplot(steps~interval|time,melted,type="l",layout=c(1,2))
groupinter <- tapply(data$steps,list(data$interval,data$newcolumn),mean,na.rm=TRUE)
groupinter <- tapply(data$steps,list(data$interval,data$newcolumn),mean,na.rm=TRUE)
groupinter <- data.frame(groupinter)
groupinter <- cbind(groupinter,unique(data$interval))
names(groupinter)[3] <- "interval"
melted <- melt(groupinter,id.vars = "interval" ,variable.name = "time", value.name = "steps")
class(melted$interval)
xyplot(steps~interval|time,melted,type="l",layout=c(1,2),scales =list(x=list(tick.number=10))
)
xyplot(steps~interval|time,melted,type="l",layout=c(1,2),scales =list(x=list(tick.number=5)))
xyplot(steps~interval|time,melted,type="l",layout=c(1,2),scales =list(x=list(tick.number=5, tck=0)))
)
xyplot(steps~interval|time,melted,type="l",layout=c(1,2),scales =list(x=list(tick.number=5, tck=0)))
xyplot(steps~interval|time,melted,type="l",layout=c(1,2),scales =list(x=list(tick.number=5, tck=2)))
xyplot(steps~interval|time,melted,type="l",layout=c(1,2),scales =list(x=list(tick.number=5, tck=0.1)))
